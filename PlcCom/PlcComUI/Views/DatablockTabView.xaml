<UserControl x:Class="PlcComUI.Views.DatablockTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PlcComUI"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:models="clr-namespace:PlcComUI.Models"
             xmlns:converters="clr-namespace:PlcComUI.Converters"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:eventmodels="clr-namespace:PlcComUI.EventModels"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:dg="http://schemas.microsoft.com/wpf/2008/toolkit"
             mc:Ignorable="d"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextElement.FontWeight="Regular"
             TextElement.FontSize="13"
             TextOptions.TextFormattingMode="Ideal" 
             TextOptions.TextRenderingMode="Auto"
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{materialDesign:MaterialDesignFont}" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- note you only need bring in these extra resource dictionaries when using non-default styles, so only bring them into your controls where the default style is not what you want -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
                <ResourceDictionary>
                    <converters:PlcCmdParameterConverter x:Key="PlcCmdParameterConverter" />
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>

            <local:DataSignalModelTemplateSelector x:Key="DataSignalModelTemplateSelector"/>
            <converters:DatabindingDebugConverter x:Key="debugConverter" />

            <DataTemplate x:Key="DataSignalModelBoolTemplate" DataType="{x:Type models:SignalDisplayModel}">
                <StackPanel Orientation="Horizontal" Margin="0 0 20 0" HorizontalAlignment="Center">
                    <Button 
                        x:Name="pulseBtn" 
                        Content="Pulse" IsEnabled="{Binding ElementName=EnableWriteCb, Path=IsChecked}"
                        FontSize="10" Height="20" Margin="0 0 20 0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding PulseCommand}">
                                    <i:InvokeCommandAction.CommandParameter>
                                        <MultiBinding Converter="{StaticResource PlcCmdParameterConverter}">
                                            <Binding Path="DataContext.IndexModel" RelativeSource="{RelativeSource AncestorLevel=1, AncestorType=StackPanel}" />
                                            <Binding Path="DataContext.Address" RelativeSource="{RelativeSource AncestorLevel=1, AncestorType=StackPanel}" />
                                        </MultiBinding>
                                    </i:InvokeCommandAction.CommandParameter>
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button 
                        x:Name="toggleBtn" 
                        Content="Toggle" IsEnabled="{Binding ElementName=EnableWriteCb, Path=IsChecked}"
                        FontSize="10" Height="20" Margin="0 0 20 0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding ToggleCommand}">
                                    <i:InvokeCommandAction.CommandParameter>
                                        <MultiBinding Converter="{StaticResource PlcCmdParameterConverter}">
                                            <Binding Path="DataContext.IndexModel" RelativeSource="{RelativeSource AncestorLevel=1, AncestorType=StackPanel}" />
                                            <Binding Path="DataContext.Address" RelativeSource="{RelativeSource AncestorLevel=1, AncestorType=StackPanel}" />
                                        </MultiBinding>
                                    </i:InvokeCommandAction.CommandParameter>
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="DataSignalModelNumericTemplate" DataType="{x:Type models:SignalDisplayModel}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>


                    <!--<StackPanel>
                    <StackPanel Orientation="Horizontal">-->
                    <TextBlock Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Text="{Binding RangeFrom}" Margin="10 0 10 0"/>

                    <ProgressBar
                        Grid.Row="0" Grid.Column="1"
                        Margin="0"
                        Height="8"
                        Background="{StaticResource MaterialDesignPaper}"
                        Style="{StaticResource MaterialDesignLinearProgressBar}"
                        Value="{Binding Value}" Minimum="{Binding RangeFrom}" Maximum="{Binding RangeTo}"
                        
                        />
                    <Slider  x:Name="slider" 
                             Grid.Row="1" Grid.Column="1"
                             Margin="0"
                             
                             IsEnabled="{Binding ElementName=EnableWriteCb, Path=IsChecked}"
                             Minimum="{Binding RangeFrom}" Maximum="{Binding RangeTo}" MinWidth="150" VerticalAlignment="Center">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ValueChanged">
                                <i:InvokeCommandAction Command="{Binding SliderCommand}">
                                    <i:InvokeCommandAction.CommandParameter>
                                        <MultiBinding Converter="{StaticResource PlcCmdParameterConverter}">
                                            <Binding Path="DataContext.IndexModel" RelativeSource="{RelativeSource AncestorLevel=1, AncestorType=Grid}" />
                                            <Binding Path="DataContext.Address" RelativeSource="{RelativeSource AncestorLevel=1, AncestorType=Grid}" />
                                            <Binding ElementName="slider" Path="Value"/>
                                        </MultiBinding>

                                    </i:InvokeCommandAction.CommandParameter>
                                </i:InvokeCommandAction>

                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Slider>
                    <TextBlock Grid.Row="0" Grid.Column="2"  Grid.RowSpan="2" Text="{Binding ElementName=slider, Path=Maximum}" Margin="10 0 10 0"/>
                    <!--</StackPanel>
                    
                </StackPanel>-->
                </Grid>
            </DataTemplate>

        </ResourceDictionary>

    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" Margin="10">
            <TextBlock Text="{Binding Name}" Margin="0 0 30 0" />
            <CheckBox x:Name="MonitorCb" IsEnabled="{Binding IsConnected}"  Content="Monitor" Margin="0 0 30 0" />
            <CheckBox x:Name="EnableWriteCb" IsEnabled="{Binding ElementName=MonitorCb, Path=IsChecked}" Content="Enable Write" Margin="0 0 30 0" />
        </StackPanel>

        <DataGrid
        Grid.Row="1"
        ItemsSource="{Binding Signals}"
        CanUserSortColumns="True"
        CanUserResizeRows="False"
        CanUserAddRows="False"
        AutoGenerateColumns="False"
        HeadersVisibility="All" 
        VerticalScrollBarVisibility="Auto"
         Margin="5 20 5 5">
            <DataGrid.Columns>
                <DataGridTextColumn  Header="Name" Binding="{Binding Name}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Address" Binding="{Binding Address}" IsReadOnly="True" />
                <DataGridTextColumn CanUserSort="False" CanUserReorder="False" Header="Read" IsReadOnly="True" Binding="{Binding ValueStr}" TextElement.FontSize="18" />
                <DataGridTemplateColumn Header="Write" MinWidth="250" CellTemplateSelector="{StaticResource DataSignalModelTemplateSelector}"/>
                <!-- Visibility="{Binding IsChecked, ElementName=cbWriteEnable, Converter={StaticResource BooleanToVisibilityConverter}}" -->
            </DataGrid.Columns>

            <DataGrid.ItemContainerStyle>
                <!--  https://stackoverflow.com/questions/42348574/caliburn-micro-action-inside-itemcontainerstyle-no-target-found-for-method/42349127 -->
                <Style TargetType="DataGridRow" BasedOn="{StaticResource MaterialDesignDataGridRow}">
                    <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu>
                                <MenuItem Header="Edit Signal"
                                        cal:Action.TargetWithoutContext="{Binding Path=PlacementTarget.Tag.DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                         cal:Message.Attach="[Event Click] = [Action EditSignal($dataContext)]"/>
                            </ContextMenu>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.ItemContainerStyle>
        </DataGrid>
    </Grid>
</UserControl>
